{"ast":null,"code":"var _jsxFileName = \"/Users/beetee/Downloads/Bloc/laptop_customizer/src/App.js\";\nimport React, { Component } from 'react'; // Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\n\nimport slugify from 'slugify';\nimport './App.css';\nimport NavBar from './Components/NavBar'; // This object will allow us to\n// easily convert numbers into US dollar values\n\nconst USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: {\n        Processor: {\n          name: '17th Generation Intel Core HB (7 Core with donut spare)',\n          cost: 700\n        },\n        'Operating System': {\n          name: 'Ubuntu Linux 16.04',\n          cost: 200\n        },\n        'Video Card': {\n          name: 'Toyota Corolla 1.5v',\n          cost: 1150.98\n        },\n        Display: {\n          name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n          cost: 1500\n        }\n      }\n    };\n\n    this.updateFeature = (feature, newValue) => {\n      const selected = Object.assign({}, this.state.selected);\n      selected[feature] = newValue;\n      this.setState({\n        selected\n      });\n    };\n  }\n\n  render() {\n    const features = Object.keys(this.props.features).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const options = this.props.features[feature].map(item => {\n        const itemHash = slugify(JSON.stringify(item));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: itemHash,\n          className: \"feature__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          id: itemHash,\n          className: \"feature__option\",\n          name: slugify(feature),\n          checked: item.name === this.state.selected[feature].name,\n          onChange: e => this.updateFeature(feature, item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: itemHash,\n          className: \"feature__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, item.name, \" (\", USCurrencyFormat.format(item.cost), \")\"));\n      });\n      return /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"feature\",\n        key: featureHash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        className: \"feature__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, feature)), options);\n    });\n    const summary = Object.keys(this.state.selected).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const selectedOption = this.state.selected[feature];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary__option\",\n        key: featureHash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary__option__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, feature, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary__option__value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, selectedOption.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"summary__option__cost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, USCurrencyFormat.format(selectedOption.cost)));\n    });\n    const total = Object.keys(this.state.selected).reduce((acc, curr) => acc + this.state.selected[curr].cost, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"main__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Customize your laptop\"), features), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main__summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Your cart\"), summary, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"summary__total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"summary__total__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"summary__total__value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, USCurrencyFormat.format(total))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/laptop_customizer/src/App.js"],"names":["React","Component","slugify","NavBar","USCurrencyFormat","Intl","NumberFormat","style","currency","App","state","selected","Processor","name","cost","Display","updateFeature","feature","newValue","Object","assign","setState","render","features","keys","props","map","idx","featureHash","options","item","itemHash","JSON","stringify","e","format","summary","selectedOption","total","reduce","acc","curr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\nimport './App.css';\nimport NavBar from './Components/NavBar';\n\n// This object will allow us to\n// easily convert numbers into US dollar values\nconst USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nclass App extends Component {\n  state = {\n    selected: {\n      Processor: {\n        name: '17th Generation Intel Core HB (7 Core with donut spare)',\n        cost: 700\n      },\n      'Operating System': {\n        name: 'Ubuntu Linux 16.04',\n        cost: 200\n      },\n      'Video Card': {\n        name: 'Toyota Corolla 1.5v',\n        cost: 1150.98\n      },\n      Display: {\n        name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n        cost: 1500\n      }\n    }\n  };\n\n  updateFeature = (feature, newValue) => {\n    const selected = Object.assign({}, this.state.selected);\n    selected[feature] = newValue;\n    this.setState({\n      selected\n    });\n  };\n\n  render() {\n    const features = Object.keys(this.props.features).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const options = this.props.features[feature].map(item => {\n        const itemHash = slugify(JSON.stringify(item));\n        return (\n          <div key={itemHash} className=\"feature__item\">\n            <input\n              type=\"radio\"\n              id={itemHash}\n              className=\"feature__option\"\n              name={slugify(feature)}\n              checked={item.name === this.state.selected[feature].name}\n              onChange={e => this.updateFeature(feature, item)}\n            />\n            <label htmlFor={itemHash} className=\"feature__label\">\n              {item.name} ({USCurrencyFormat.format(item.cost)})\n            </label>\n          </div>\n        );\n      });\n\n      return (\n        <fieldset className=\"feature\" key={featureHash}>\n          <legend className=\"feature__name\">\n            <h3>{feature}</h3>\n          </legend>\n          {options}\n        </fieldset>\n      );\n    });\n\n    const summary = Object.keys(this.state.selected).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const selectedOption = this.state.selected[feature];\n\n      return (\n        <div className=\"summary__option\" key={featureHash}>\n          <div className=\"summary__option__label\">{feature} </div>\n          <div className=\"summary__option__value\">{selectedOption.name}</div>\n          <div className=\"summary__option__cost\">\n            {USCurrencyFormat.format(selectedOption.cost)}\n          </div>\n        </div>\n      );\n    });\n\n    const total = Object.keys(this.state.selected).reduce(\n      (acc, curr) => acc + this.state.selected[curr].cost,\n      0\n    );\n\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <main>\n          <form className=\"main__form\">\n            <h2>Customize your laptop</h2>\n            {features}\n          </form>\n          <section className=\"main__summary\">\n            <h2>Your cart</h2>\n            {summary}\n            <div className=\"summary__total\">\n              <div className=\"summary__total__label\">Total</div>\n              <div className=\"summary__total__value\">\n                {USCurrencyFormat.format(total)}\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}